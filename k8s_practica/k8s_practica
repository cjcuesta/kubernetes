https://kubernetes.io/docs/tasks/run-application/run-single-instance-stateful-application/ 

#Construyo una imagen de MySQL
docker build -t mysql:v4 -f Dockerfile .

#Creo el contenedor my-db3
docker run -d -p 3306:3306 --name my-db3 -e MYSQL_ROOT_PASSWORD=12345 -e MYSQL_DATABASE=docker-db -e MYSQL_USER=docker-user -e MYSQL_PASSWORD=54321 mysql:v4

#Ingreso al contenedor 
docker exec -ti my-db3 bash

#Reviso en el contenedor los archivos y la info
cat  /usr/local/bin/mysqld.sh 
cat /etc/my.cnf
cat /docker-entrypoint-initdb.d/db.sh

#Guardo en mi local una imagen de MySQL con los archivos de configuracion
docker commit my-db3 cjcuesta/mysql:v4

#Los subo la imagen al repositorio
docker push cjcuesta/mysql:v4

#Guardo en mi local una imagen de la APP con los archivos de configuracion
docker commit app cjcuesta/app-flask:v1
docker images

#Los subo la imagen al repositorio
docker push cjcuesta/app-flask:v1

minikube start
# En este esta todo 
k apply -f mysql-pv.yaml 

k get pvc mysql-pv-claim 
k get pv mysql-pv-volume 

k describe pvc mysql-pv-claim 
k describe pv mysql-pv-volume 

k apply -f mysql-deployment.yaml

kubectl describe deployment mysql

#Se mira el nombre del pod
k get pods -w

#Se puede ingresar a pod a revisarlo
k exec -ti mysql-66cc4d45d5-4gqmz -- bash

#desde una imagen de la misma version nos conectamos al deployment como usurio root por defecto
kubectl run -it --rm --image=mysql --restart=Never mysql-client -- mysql -h mysql -p12345

#desde una imagen de la misma version nos conectamos al deployment con un suario que hayamos creado
kubectl run -it --rm --image=mysql --restart=Never mysql-client -- mysql -h mysql -u flask-app -p54321

nos podemos conectar a la consola del POD mysql-7b877cd6db-mjpmm
k exec -ti mysql-7b877cd6db-mjpmm -- bash

#Nos conectamos como root 
bash-4.4# mysql -h 127.0.0.1 -u root -p12345

#Nos conectamos como el usuario que hayamos pasado en el parametro.
bash-4.4# mysql -h 127.0.0.1 -u flask-app -p54321

k apply -f dep-flask-app.yaml
 
 k get pods -w
 
 minikube tunnel
 
 k apply -f app-svc.yaml 
  
kubectl delete deployment,svc mysql

kubectl delete pvc mysql-pv-claim
kubectl delete pv mysql-pv-volume

para borrar la data de minikube
minikube delete 

para iniciar en blaco
minikube start
 
 
 https://www.returngis.net/2019/04/acceder-a-tus-aplicaciones-en-kubernetes-a-traves-de-ingress/ 
 
 https://www.returngis.net/2020/05/configurar-un-ingress-controller-con-nginx-helm-y-nip-io/
